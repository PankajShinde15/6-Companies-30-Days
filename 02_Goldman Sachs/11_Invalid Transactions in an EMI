class Solution
{
public:
    vector<string> invalidTransactions(vector<string> &transactions)
    {
        int n = transactions.size();
        int flag = 0;
        vector<string> name;
        vector<int> time;
        vector<int> amount;
        vector<string> city;
        vector<string> ans;

        for (auto str : transactions)
        {
            stringstream ss(str);
            string temp;

            while (getline(ss, temp, ','))
            {
                if (flag == 0)
                {
                    name.emplace_back(temp);
                    flag = 1;
                }
                else if (flag == 1)
                {
                    time.emplace_back(stoi(temp));
                    flag = 2;
                }
                else if (flag == 2)
                {
                    amount.emplace_back(stoi(temp));
                    flag = 3;
                }
                else if (flag == 3)
                {
                    city.emplace_back(temp);
                    flag = 0;
                }
            }
        }

        int j = 0;
        for (auto i : amount)
        {
            if (i > 1000)
            {
                ans.emplace_back(transactions[j]);
            }
            j++;
        }

        for (int i = 0; i < n; i++)
        {
            for (int j = 0; j < n; j++)
            {
                if (name[i] == name[j] && city[i] != city[j])
                {
                    if (abs(time[i] - time[j]) <= 60)
                    {
                        if (amount[i] <= 1000)
                            ans.emplace_back(transactions[i]);
                            break;
                    }
                }
            }
        }
        return ans;
    }
};
